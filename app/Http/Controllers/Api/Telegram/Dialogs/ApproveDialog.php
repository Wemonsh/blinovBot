<?php


namespace App\Http\Controllers\Api\Telegram\Dialogs;


use App\Models\Resident;
use App\Models\TelegramUser;
use Illuminate\Support\Facades\Log;

class ApproveDialog extends Dialog
{
    protected $steps = ['startDialog', 'approveRequest'];

    public function init() {
        $this->user->dialog = __CLASS__;
        $this->user->save();
    }

    protected function startDialog() {
        $residents = Resident::with('telegramUser')->where('invited', 0)->whereNotNull('full_name')->get();
        foreach ($residents as $resident) {
            $text = '#'.$resident->id.
                PHP_EOL.
                '@'.$resident->telegramUser->first_name.
                PHP_EOL.
                'üòä '.$resident->full_name.
                PHP_EOL.
                'üìß '.$resident->email.
                PHP_EOL.
                '‚òé Ô∏è'.$resident->phone.
                PHP_EOL.
                'üè† '.$resident->apartment_numbers.
                PHP_EOL.
                'üöò '.$resident->parking_numbers;
            $this->api->sendMessage([ 'chat_id' => $this->user->uid , 'text' => $text ]);
        }
        if (count($residents) === 0) {
            $this->api->sendMessage([ 'chat_id' => $this->user->uid , 'text' => '–ù–µ—Ç –∑–∞—è–≤–æ–∫ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç' ]);
            exit();
        }
        $this->api->sendMessage([ 'chat_id' => $this->user->uid , 'text' => '–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–º—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ' ]);

        $this->user->step = 1;
        $this->user->save();

        $this->get_next();
    }

    protected function approveRequest() {

        $resident = Resident::withoutTrashed()->where('id', $this->message['message']['text'])->first();
        $user = TelegramUser::withoutTrashed()->where('id', $resident->user_id)->first();

        $user->invite = null;
        $user->save();

        $resident->invited = 1;
        $resident->save();

        $keyboard = array(
            array(
                array('text'=>'–í—Å—Ç—É–ø–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É','url'=>'https://t-blinov.wemonsh.ru/t/'.$user->uid)
            )
        );

        $this->api->sendMessage([ 'chat_id' => $user->uid , 'text' => '–î–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ –∑–∞–∫—Ä—ã—Ç—É—é –≥—Ä—É–ø–ø—É –ñ–ö –°–µ—Ä–¥—Ü–µ –°—Ç–æ–ª–∏—Ü—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–≤—Å—Ç—É–ø–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É".',
            'disable_web_page_preview' => false,
            'reply_markup' => json_encode(array('inline_keyboard' => $keyboard))]);

        $this->api->sendMessage([ 'chat_id' => $this->user->uid , 'text' => '–°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ' ]);
        $this->end();
        //$this->api->sendMessage([ 'chat_id' => $this->user->uid , 'text' => '–ù–∞–ø–∏—à–∏—Ç–µ 1 –¥–ª—è –ø–æ—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ 2 –¥–ª—è –æ—Ç–∫–∞–∑–∞' ]);
    }


}
